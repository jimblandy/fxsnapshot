Git is the backtrace; this is the continuation.

* small
- [ ] better syntax for regular expressions
- [ ] decimal numbers
- [ ] bug: `paths` assumes core dump edges and id's are all well-formed
  BreadthFirst should implement FallibleIterator
- [ ] publish as crate
  - [ ] publish new fallible-iterator
  - [ ] remove all git dependencies
- [ ] Change `Stream<'a>` to `Stream<T>`, make `Stream` independent?
- [ ] Change `TryUnwrap` to `FromValue`? so you'd write `Stream<'a>::from_value`?
- [ ] Box edges and nodes in Value, to reduce its size.
- [ ] Could some Streams be double-ended? Iterating over nodes can't; edges are
  meaningless; but literals and paths are.
- [ ] can we specialize some plans to the value types they produce?
- [ ] closures and variables
- [ ] Can EqualPredicate cache its given value? (A 'once_cache' in the lexical environment?)
- [ ] definitions
- [ ] file input
- [ ] static type checking
  - [ ] explicit types on closure arguments
  - [ ] homogeneous streams
- [ ] source positions
- [ ] specialize to avoid dynamic dispatch for constants and variable references
      (once we can actually write code large enough to benchmark)
- [ ] trait for structs from which we can fetch fields by name?
- [ ] specify our own trait for formatting values?
- [ ] Use From<&[u8]> instead of FromDumpBytes?

* medium

- dominator trees?

- A patch to make `fxsnapshot` operate directly on a compressed file would be
welcome. However, decompressing a 13MiB snapshot takes about 0.3s, so it's
probably nice to retain the ability to operate on uncompressed files by just
mapping them into memory.

